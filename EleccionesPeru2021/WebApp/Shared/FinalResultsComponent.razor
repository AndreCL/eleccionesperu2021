@if (Hidden == false)
{
	if (partidosPoliticos == null || candidatosPoliticos == null || hojasDeVida == null || Results == null || winnerResults == null)
	{
		<p><em>Cargando...</em></p>
	}
	else
	{
		<h1>Resultados:</h1>
		<p>Partidos políticos que cumplen todos tus criterios: @agreed de @Results.Count()</p>

		<hr>

		@foreach (var winnerResult in winnerResults)
		{
			if (winnerResult != null)
			{
				PartidoPolitico winnerPartido = partidosPoliticos.Where(x => x.idOrganizacionPolitica == winnerResult.Id).FirstOrDefault();
				var president = candidatosPoliticos?.FirstOrDefault(x => x.idSolicitudLista == winnerPartido.idSolicitudLista &&
				x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos?.FirstOrDefault(x => x.idSolicitudLista == winnerPartido.idSolicitudLista &&
				x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos?.FirstOrDefault(x => x.idSolicitudLista == winnerPartido.idSolicitudLista &&
				x.idCargoEleccion == 3);


				<h2 width="100%">@winnerResult.Name</h2>
				<div class="ParentColumns">
					<div class="ColumnThird">
						<img src="@winnerResult.ImageRoute" alt="Logo" height="100px" width="100px" />
					</div>
					<div class="ColumnTwoThirds">
						<p>Cumple tus criterios: @(winnerResult.Agree?"100":$"{winnerResult.AgreePercentage:0.##}")%</p>
						<p>
							Estado de inscripción:
							<strong class="@winnerPartido.strEstadoLista">@winnerPartido.strEstadoLista</strong>
						</p>
					</div>
				</div>

				<br />

				<h3>Candidatos</h3>

				<div class="ParentColumns">
					<div class="ColumnThird">

						<h4>Presidente de la República</h4>

						@if (president != null)
						{
							<img width="79px" height="111px" src="@($"sample-data{president.strRutaArchivo.Replace("Assets","ASSETS")}")" alt="@president.strCandidato" />
							<p>@president.strCandidato</p>
							<p>Edad: @president.intEdad</p>
							<p>Sexo: @(president.strSexo=="1"?"Masculino":"Femenino")</p>
							<p>Estado de inscripción: <strong class="@president.strEstadoExp">@president.strEstadoExp</strong></p>

							var hojaDeVida = hojasDeVida.Where(i => i?.DatosPersonales?.idHojaVida == president.idHojaVida)?.FirstOrDefault();

							if (hojaDeVida != null)
							{
								<p>
									Primaria concluida:
									<strong class="@(hojaDeVida.EduBasica?.strConcluidoEduPrimaria.Equals("1")??false?"Si":"No")">
										@(hojaDeVida.EduBasica?.strConcluidoEduPrimaria.Equals("1")??false?"Si":"No")
									</strong>
								</p>
							}
						}
						else
						{
							<h5 class="No">Hoja de vida no está disponible</h5>
						}

					</div>
					<div class="ColumnThird">

						<h4>Primer Vicepresidente de la República</h4>

						@if (vicepres1 != null)
						{
							<img width="79px" height="111px" src="@($"sample-data{vicepres1.strRutaArchivo.Replace("Assets","ASSETS")}")" alt="@vicepres1.strCandidato" />
							<p>@vicepres1.strCandidato</p>
							<p>Edad: @vicepres1.intEdad</p>
							<p>Sexo: @(vicepres1.strSexo=="1"?"Masculino":"Femenino")</p>
							<p>Estado de inscripción: <strong class="@vicepres1.strEstadoExp">@vicepres1.strEstadoExp</strong></p>

							var hojaDeVida = hojasDeVida.Where(i => i?.DatosPersonales?.idHojaVida == vicepres1.idHojaVida)?.FirstOrDefault();

							if (hojaDeVida != null)
							{
								<p>
									Primaria concluida:
									<strong class="@(hojaDeVida.EduBasica?.strConcluidoEduPrimaria.Equals("1")??false?"Si":"No")">
										@(hojaDeVida.EduBasica?.strConcluidoEduPrimaria.Equals("1")??false?"Si":"No")
									</strong>
								</p>
							}
						}
						else
						{
							<h5 class="No">Hoja de vida no está disponible</h5>
						}

					</div>
					<div class="ColumnThird">

						<h4>Segundo Vicepresidente de la República</h4>

						@if (vicepres2 != null)
						{
							<img width="79px" height="111px" src="@($"sample-data{vicepres2.strRutaArchivo.Replace("Assets","ASSETS")}")" alt="@vicepres2.strCandidato" />
							<p>@vicepres2.strCandidato</p>
							<p>Edad: @vicepres2.intEdad</p>
							<p>Sexo: @(vicepres2.strSexo=="1"?"Masculino":"Femenino")</p>
							<p>Estado de inscripción: <strong class="@vicepres2.strEstadoExp">@vicepres2.strEstadoExp</strong></p>

							var hojaDeVida = hojasDeVida.Where(i => i?.DatosPersonales?.idHojaVida == vicepres2.idHojaVida)?.FirstOrDefault();

							if (hojaDeVida != null)
							{
								<p>
									Primaria concluida:
									<strong class="@(hojaDeVida.EduBasica?.strConcluidoEduPrimaria.Equals("1")??false?"Si":"No")">
										@(hojaDeVida.EduBasica?.strConcluidoEduPrimaria.Equals("1")??false?"Si":"No")
									</strong>
								</p>
							}
						}
						else
						{
							<h5 class="No">Hoja de vida no está disponible</h5>
						}

					</div>
				</div>

				<h3>Plan de gobierno</h3>
				<a target="_blank" href="sample-data/@(winnerPartido.strCarpeta+winnerPartido.idPlanGobierno+".pdf")">
					Link plan de gobierno completo
				</a>

				<hr>
			}
		}

		<style type="text/css">
			.INSCRITO {
				background-color: palegreen;
			}

			.ADMITIDO {
				background-color: palegreen;
			}

			.IMPROCEDENTE {
				background-color: palevioletred;
			}

			.APELACIÓN {
				background-color: lightyellow;
			}

			.TACHA {
				background-color: lightyellow;
			}

			.Si {
				background-color: palegreen;
			}

			.No {
				background-color: palevioletred;
			}

			.ColumnThird {
				float: left;
				width: 33%;
				align-content: center;
				text-align: center;
				display: table-cell;
			}

			.ColumnTwoThirds {
				float: left;
				width: 67%;
				display: table-cell;
			}
			.ParentColumns {
				overflow: hidden;
				width: 100%;
				display: table;
			}

		</style>

	}
}

@code {
	[Parameter]
	public List<Result> Results { get; set; }

	[Parameter]
	public List<PartidoPolitico> partidosPoliticos { get; set; }

	[Parameter]
	public List<CandidatoGeneral> candidatosPoliticos { get; set; }

	[Parameter]
	public List<HojaDeVida> hojasDeVida { get; set; }

	[Parameter]
	public bool Hidden
	{
		get
		{
			return hidden;
		}
		set
		{
			if (value == false)
			{
				UpdateResults();
			}

			hidden = value;
		}
	}

	private bool hidden;

	private int agreed = 0;

	private List<Result> winnerResults = new List<Result>();

	private void UpdateResults()
	{
		Results = Results.OrderByDescending(x => x.Agree).ThenByDescending(x => x.AgreePercentage).ToList();
		agreed = Results.Count(x => x.Agree == true);

		if (agreed > 0)
		{
			for (var i = 0; i < agreed; i++)
			{
				winnerResults.Add(Results[i]);
			}
		}
		else
		{
			winnerResults.Add(Results[0]);
		}

	}
}
