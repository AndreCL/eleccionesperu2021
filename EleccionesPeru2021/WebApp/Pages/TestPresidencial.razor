@page "/testpresidencial"
@inject HttpClient Http

<QuestionComponent Questions="questions" Completed="@ShowResults"></QuestionComponent>

<ResultsComponent Results="@results" Hidden="@HideResultsBar"></ResultsComponent>

<FinalResultsComponent Results="@results" 
					   candidatosPoliticos="@candidatosPoliticos" 
					   hojasDeVida="@hojasDeVida"
					   partidosPoliticos="@partidosPoliticos"
					   planesDeGobierno="@planesDeGobierno"
					   Hidden="@(!HideResultsBar)"></FinalResultsComponent>

@code {
	private List<PartidoPolitico> partidosPoliticos;
	private List<CandidatoGeneral> candidatosPoliticos;
	private List<HojaDeVida> hojasDeVida;
	private List<PlanDeGobierno> planesDeGobierno;
	private List<Result> results = new List<Result> { };
	private List<Question> questions = new List<Question> { };
	private bool HideResultsBar = false;
	private TextInfo textInfo;


	protected override async Task OnInitializedAsync()
	{
		textInfo = new CultureInfo("es-PE", false).TextInfo;

		var temp = await Http.GetFromJsonAsync<PartidoPolitico[]>("sample-data/pres/presidentialList0.json");

		//Filter out improsedente
		partidosPoliticos = temp.ToList();

		//Filter out improsedente
		var temp2 = await Http.GetFromJsonAsync<CandidatoGeneral[]>("sample-data/pres/presidentialList1.json");
		candidatosPoliticos = temp2.ToList().Where(
			x => !x.strEstadoExp.Equals("IMPROCEDENTE", StringComparison.InvariantCultureIgnoreCase)).ToList();

		var temp3 = await Http.GetFromJsonAsync<HojaDeVida[]>("sample-data/pres/presidentialList2.json");
		hojasDeVida = temp3.ToList();

		var temp4 = await Http.GetFromJsonAsync<PlanDeGobierno[]>("sample-data/pres/planDeGobierno0.json");
		planesDeGobierno = temp4.ToList();

		LoadResults();

		Question question7 = new Question
		{
			Title = "Sentencias",
			Description = "Los candidatos a la presidencia, 1ra vicepresidencia y 2da vicepresidencia",
			Options = new List<string> { "Candidatos sin sentencias" },
			OnNext = filterBySentencias
		};
		questions.Add(question7);

		Question question5 = new Question
		{
			Title = "Cargos de Elección Popular",
			Description = "Los candidatos a la presidencia, 1ra vicepresidencia y 2da vicepresidencia deben haber desempeñado " +
			"un cargo de elección popular (ejemplo alcalde, regidor, congresista, etc.)",
			Options = new List<string> { "Si", "No" },
			OnNext = filterByCargoElecto
		};
		questions.Add(question5);

		Question question4 = new Question
		{
			Title = "Cargos Partidarios",
			Description = "Los candidatos a la presidencia, 1ra vicepresidencia y 2da vicepresidencia deben haber desempeñado " +
		"un cargo partidario en su trayectoria política (cargo en organización política)",
			Options = new List<string> { "Si", "No" },
			OnNext = filterByCargoPartidario
		};
		questions.Add(question4);

		Question question6 = new Question
		{
			Title = "Renuncias a otros partidos",
			Description = "Los candidatos a la presidencia, 1ra vicepresidencia y 2da vicepresidencia pueden " +
		"haber renunciado a otros partidos, movimientos de alcance regional o departamental u organizaciones políticas de alcance " +
		"provincial y distrital",
			Options = new List<string> { "Candidatos que han renunciado a otros partidos",
				"Candidatos que <strong>no</strong> han renunciado a otros partidos" },
			OnNext = filterByRenuncias
		};
		questions.Add(question6);

		Question question2 = new Question
		{
			Title = "País de nacimiento",
			Description = "¿En qué país nacieron los candidatos a la presidencia, 1ra vicepresidencia y 2da vicepresidencia?",
			Options = new List<string> { "Perú" },
			OnNext = filterByBirthplace
		};
		questions.Add(question2);

		Question question3 = new Question
		{
			Title = "Nivel de educación concluída",
			Description = "¿Cual es el minimo nivel de educacíon concluída de los candidatos a la presidencia, 1ra " +
			"vicepresidencia y 2da vicepresidencia?",
			Options = new List<string> { "Primaria", "Secundaria", "Estudio universitario", "Postgrado" },
			OnNext = filterByEduLevel
		};
		questions.Add(question3);

		Question question = new Question
		{
			Title = "Conformación por sexo",
			Description = "Todos los partidos tienen al menos 1 persona de cada genero en la lista para presidencia, " +
			"1a vicepresidencia y 2a vicepresidencia. ¿Cual es tu conformación preferida?",
			Options = new List<string> { "2 mujeres y 1 hombre", "2 hombres y 1 mujer" },
			OnNext = filterByGender
		};
		questions.Add(question);

		Question question8 = new Question
		{
			Title = "Ingresos anuales declarados",
			Description = "Entre 100 000 y 400 000 soles son los ingresos medios de los candidatos a la presidencia, 1ra vicepresidencia " +
			"y 2da vicepresidencia.",
			Options = new List<string> { "<strong>Excluir</strong> candidatos con ingresos mayores a 1 millón de soles",
				"<strong>Excluir</strong> candidatos con ingresos menores a 100 000 soles" },
			OnNext = filterByIngresos
		};
		questions.Add(question8);

		Question question9 = new Question
		{
			Title = "Valor de bienes declarados",
			Description = "Valor de bienes inmuebles, muebles y vehículos declarados por los candidatos a la presidencia, 1ra vicepresidencia y 2da vicepresidencia",
			Options = new List<string> { "<strong>Excluir</strong> candidatos cuyo valor de bienes es mayor de 1 millón de soles",
				"<strong>Excluir</strong> candidatos cuyo valor de bienes es menor a 100 000 soles" },
			OnNext = filterByBienes
		};
		questions.Add(question9);

	}

	#region actions
	public void filterByBienes(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Equals("1", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.BienInmueble?.Where(x => x.strTengoInmueble.Equals("1")).Sum(x => x.decAutovaluo) +
					hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.BienMueble?.Where(x => x.strTengoBienMueble.Equals("1")).Sum(x => x.decValor);
				var vice1hoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.BienInmueble?.Where(x => x.strTengoInmueble.Equals("1")).Sum(x => x.decAutovaluo) +
					hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.BienMueble?.Where(x => x.strTengoBienMueble.Equals("1")).Sum(x => x.decValor);
				var vice2hoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.BienInmueble?.Where(x => x.strTengoInmueble.Equals("1")).Sum(x => x.decAutovaluo) +
					hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.BienMueble?.Where(x => x.strTengoBienMueble.Equals("1")).Sum(x => x.decValor);

				if ((preshoja != null && preshoja >= 1000000) || (vice1hoja != null && vice1hoja >= 1000000) || (vice2hoja != null && vice2hoja >= 1000000))
				{
					failed.Add(i);
				}
			}
		}
		else if (option.Equals("2", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.BienInmueble?.Where(x => x.strTengoInmueble.Equals("1")).Sum(x => x.decAutovaluo) +
					hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.BienMueble?.Where(x => x.strTengoBienMueble.Equals("1")).Sum(x => x.decValor);
				var vice1hoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.BienInmueble?.Where(x => x.strTengoInmueble.Equals("1")).Sum(x => x.decAutovaluo) +
					hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.BienMueble?.Where(x => x.strTengoBienMueble.Equals("1")).Sum(x => x.decValor);
				var vice2hoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.BienInmueble?.Where(x => x.strTengoInmueble.Equals("1")).Sum(x => x.decAutovaluo) +
					hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.BienMueble?.Where(x => x.strTengoBienMueble.Equals("1")).Sum(x => x.decValor);

				if ((preshoja != null && preshoja <= 100000) || (vice1hoja != null && vice1hoja <= 100000) || (vice2hoja != null && vice2hoja <= 100000))
				{
					failed.Add(i);
				}
			}
		}


		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void filterByIngresos(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Equals("1", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.Ingresos?.decOtroIngresoPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decOtroIngresoPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPublico;
				var vice1hoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.Ingresos?.decOtroIngresoPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decOtroIngresoPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPublico;
				var vice2hoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.Ingresos?.decOtroIngresoPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decOtroIngresoPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPublico;

				if ((preshoja != null && preshoja >= 1000000) || (vice1hoja != null && vice1hoja >= 1000000) || (vice2hoja != null && vice2hoja >= 1000000))
				{
					failed.Add(i);
				}
			}
		}
		else if (option.Equals("2", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.Ingresos?.decOtroIngresoPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decOtroIngresoPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == president?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPublico;
				var vice1hoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.Ingresos?.decOtroIngresoPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decOtroIngresoPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres1?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPublico;
				var vice2hoja =
					hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.Ingresos?.decOtroIngresoPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decOtroIngresoPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRemuBrutaPublico +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPrivado +
							hojasDeVida.Where(x => x?.DatosPersonales?.idHojaVida == vicepres2?.idHojaVida)?.FirstOrDefault()?.Ingresos?.decRentaIndividualPublico;

				if ((preshoja != null && preshoja <= 100000) || (vice1hoja != null && vice1hoja <= 100000) || (vice2hoja != null && vice2hoja <= 100000))
				{
					failed.Add(i);
				}
			}
		}


		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}


	public void filterBySentencias(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Equals("1", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault();
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault();
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault();

				if ((preshoja != null &&
					(preshoja.SentenciaPenal.Where(x => x.strTengoSentenciaPenal.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0 ||
					preshoja.SentenciaObliga.Where(x => x.strTengoSentenciaObliga.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0)
					) ||
		(vice1hoja != null &&
					(vice1hoja.SentenciaPenal.Where(x => x.strTengoSentenciaPenal.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0 ||
					vice1hoja.SentenciaObliga.Where(x => x.strTengoSentenciaObliga.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0)
					) ||
		(vice2hoja != null &&
					(vice2hoja.SentenciaPenal.Where(x => x.strTengoSentenciaPenal.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0 ||
					vice2hoja.SentenciaObliga.Where(x => x.strTengoSentenciaObliga.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0)
					)
		)
				{
					failed.Add(i);
				}
			}
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void filterByRenuncias(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Equals("1", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.RenunciaOP;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.RenunciaOP;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.RenunciaOP;

				if ((preshoja != null && preshoja.Where(x => x.strTengoRenunciaOP.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() == 0) ||
		(vice1hoja != null && vice1hoja.Where(x => x.strTengoRenunciaOP.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() == 0) ||
		(vice2hoja != null && vice2hoja.Where(x => x.strTengoRenunciaOP.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() == 0)
		)
				{
					failed.Add(i);
				}
			}
		}

		if (option.Equals("2", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.RenunciaOP;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.RenunciaOP;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.RenunciaOP;

				if ((preshoja != null && preshoja.Where(x => x.strTengoRenunciaOP.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0) ||
		(vice1hoja != null && vice1hoja.Where(x => x.strTengoRenunciaOP.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0) ||
		(vice2hoja != null && vice2hoja.Where(x => x.strTengoRenunciaOP.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0)
		)
				{
					failed.Add(i);
				}
			}
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void filterByCargoElecto(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Equals("1", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.CargoEleccion;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.CargoEleccion;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.CargoEleccion;

				if ((preshoja != null && preshoja.Where(x => x.strCargoEleccion.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() == 0) ||
		(vice1hoja != null && vice1hoja.Where(x => x.strCargoEleccion.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() == 0) ||
		(vice2hoja != null && vice2hoja.Where(x => x.strCargoEleccion.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() == 0)
		)
				{
					failed.Add(i);
				}
			}
		}
		else if (option.Equals("2", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.CargoEleccion;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.CargoEleccion;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.CargoEleccion;

				if ((preshoja != null && preshoja.Where(x => x.strCargoEleccion.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0) ||
		(vice1hoja != null && vice1hoja.Where(x => x.strCargoEleccion.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0) ||
		(vice2hoja != null && vice2hoja.Where(x => x.strCargoEleccion.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0)
		)
				{
					failed.Add(i);
				}
			}
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void filterByCargoPartidario(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Equals("1", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.CargoPartidario;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.CargoPartidario;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.CargoPartidario;

				if ((preshoja != null && preshoja.Where(x => x.strTengoCargoPartidario.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() == 0) ||
		(vice1hoja != null && vice1hoja.Where(x => x.strTengoCargoPartidario.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() == 0) ||
		(vice2hoja != null && vice2hoja.Where(x => x.strTengoCargoPartidario.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() == 0)
		)
				{
					failed.Add(i);
				}
			}
		}
		else if (option.Equals("2", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.CargoPartidario;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.CargoPartidario;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.CargoPartidario;

				if ((preshoja != null && preshoja.Where(x => x.strTengoCargoPartidario.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0) ||
		(vice1hoja != null && vice1hoja.Where(x => x.strTengoCargoPartidario.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0) ||
		(vice2hoja != null && vice2hoja.Where(x => x.strTengoCargoPartidario.Equals("1", StringComparison.InvariantCultureIgnoreCase)).Count() > 0)
		)
				{
					failed.Add(i);
				}
			}
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void filterByEduLevel(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Equals("4", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.EduPosgrado?.strConcluidoPosgrado;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.EduPosgrado?.strConcluidoPosgrado;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.EduPosgrado?.strConcluidoPosgrado;

				if ((preshoja != null && !(preshoja == "1")) ||
			(vice1hoja != null && !(vice1hoja == "1")) ||
			(vice2hoja != null && !(vice2hoja == "1"))
			)
				{
					failed.Add(i);
				}
			}
		}
		else if (option.Equals("3", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.EduUniversitaria?.Any(x => x.strConcluidoEduUni != null && x.strConcluidoEduUni == "1");
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.EduUniversitaria?.Any(x => x.strConcluidoEduUni != null && x.strConcluidoEduUni == "1");
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.EduUniversitaria?.Any(x => x.strConcluidoEduUni != null && x.strConcluidoEduUni == "1");

				if ((preshoja != null && !preshoja.Value) ||
				(vice1hoja != null && !vice1hoja.Value) ||
				(vice2hoja != null && !vice2hoja.Value)
				)
				{
					failed.Add(i);
				}
			}
		}
		else if (option.Equals("2", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.EduBasica?.strConcluidoEduSecundaria;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.EduBasica?.strConcluidoEduSecundaria;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.EduBasica?.strConcluidoEduSecundaria;

				if ((preshoja != null && !(preshoja == "1")) ||
			(vice1hoja != null && !(vice1hoja == "1")) ||
			(vice2hoja != null && !(vice2hoja == "1"))
			)
				{
					failed.Add(i);
				}
			}
		}
		else if (option.Equals("1", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.EduBasica?.strConcluidoEduPrimaria;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.EduBasica?.strConcluidoEduPrimaria;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.EduBasica?.strConcluidoEduPrimaria;

				if ((preshoja != null && !(preshoja == "1")) ||
			(vice1hoja != null && !(vice1hoja == "1")) ||
			(vice2hoja != null && !(vice2hoja == "1"))
			)
				{
					failed.Add(i);
				}
			}
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void filterByBirthplace(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Equals("1", StringComparison.InvariantCultureIgnoreCase))
		{
			foreach (var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.DatosPersonales?.strPaisNacimiento;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.DatosPersonales?.strPaisNacimiento;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.DatosPersonales?.strPaisNacimiento;

				if ((preshoja != null && !preshoja.Equals("PERÚ", StringComparison.InvariantCultureIgnoreCase)) ||
					(vice1hoja != null && !vice1hoja.Equals("PERÚ", StringComparison.InvariantCultureIgnoreCase)) ||
					(vice2hoja != null && !vice2hoja.Equals("PERÚ", StringComparison.InvariantCultureIgnoreCase))
					)
				{
					failed.Add(i);
				}
			}
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void filterByGender(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Equals("1", StringComparison.InvariantCultureIgnoreCase))
		{
			failed = partidosPoliticos.Where(x => x.intCandHombres > x.intCandMujeres).ToList();
		}
		else if (option.Equals("2", StringComparison.InvariantCultureIgnoreCase))
		{
			failed = partidosPoliticos.Where(x => x.intCandMujeres > x.intCandHombres).ToList();
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	#endregion

	public void LoadResults()
	{
		foreach (var i in partidosPoliticos)
		{
			results.Add(new Result()
			{
				Id = i.idOrganizacionPolitica,
				ImageRoute = $"sample-data/Logo/{i.idOrganizacionPolitica}.png",
				Name = textInfo.ToTitleCase(i.strOrganizacionPolitica.ToLower())
			});
		}
		results = results.OrderBy(a => Guid.NewGuid()).ToList();
	}

	public void ShowResults()
	{
		HideResultsBar = true;
		StateHasChanged();
	}
}