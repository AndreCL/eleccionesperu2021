@page "/testpresidencial"
@inject HttpClient Http

<QuestionComponent Questions="Questions"></QuestionComponent>

<p>@debug</p>

<ResultsComponent Results="@results"></ResultsComponent>



@code {
	public List<PartidoPolitico> partidosPoliticos;
	public List<CandidatoGeneral> candidatosPoliticos;
	public List<Result> results = new List<Result> { };
	public List<Question> Questions = new List<Question> { };
	public string debug = "";

	protected override async Task OnInitializedAsync()
	{
		#region hide
		var temp = await Http.GetFromJsonAsync<PartidoPolitico[]>("sample-data/presidentialList0.json");

		//Filter out improsedente
		partidosPoliticos = temp.ToList().Where(x => !x.strEstadoLista.Equals("IMPROCEDENTE", StringComparison.InvariantCultureIgnoreCase)).ToList();

		//Filter out improsedente
		var temp2 = await Http.GetFromJsonAsync<CandidatoGeneral[]>("sample-data/presidentialList1.json");
		candidatosPoliticos = temp2.ToList().Where(x => !x.strEstadoExp.Equals("IMPROCEDENTE", StringComparison.InvariantCultureIgnoreCase)).ToList();

		LoadResults();

		Question question = new Question
		{
			Title = "Distribución por genero",
			Description = "Presidencia, 1a vicepresidencia y 2a vicepresidencia",
			Options = new List<string> { "Mayoría femenina", "Mayoría masculina" },
			OnNext = filterByGender
		};
		Questions.Add(question);

		#endregion

		//below works fine
		//filterByGender("femenina");
	}

	//Works when coming from OnInitializedAsync() but not QuestionComponent.razor doing Next(). 
	//Debugging shows it goes into the method and does all the computing, but nothing happens in UI. 
	public void filterByGender(string option)
	{
		debug = option;

		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Contains("femenina"))
		{
			failed = partidosPoliticos.Where(x => x.intCandHombres > x.intCandMujeres).ToList();
			debug = $"found {failed.Count} failed fem";
		}
		else if (option.Contains("masculina"))
		{
			failed = partidosPoliticos.Where(x => x.intCandMujeres > x.intCandHombres).ToList();
			debug = $"found {failed.Count} failed masc";
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}
	}

	public void LoadResults()
	{
		foreach (var i in partidosPoliticos)
		{
			results.Add(new Result()
			{
				Id = i.idOrganizacionPolitica,
				ImageRoute = $"sample-data/Logo/{i.idOrganizacionPolitica}.png",
				Name = i.strOrganizacionPolitica
			});
		}
	}
}