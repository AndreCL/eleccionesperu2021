@page "/testpresidencial"
@inject HttpClient Http

<QuestionComponent Questions="questions"></QuestionComponent>

<ResultsComponent Results="@results"></ResultsComponent>



@code {
	private List<PartidoPolitico> partidosPoliticos;
	private List<CandidatoGeneral> candidatosPoliticos;
	private List<HojaDeVida> hojasDeVida;
	private List<Result> results = new List<Result> { };
	private List<Question> questions = new List<Question> { };


	protected override async Task OnInitializedAsync()
	{
		var temp = await Http.GetFromJsonAsync<PartidoPolitico[]>("sample-data/presidentialList0.json");

		//Filter out improsedente
		partidosPoliticos = temp.ToList().Where(x => !x.strEstadoLista.Equals("IMPROCEDENTE", StringComparison.InvariantCultureIgnoreCase)).ToList();

		//Filter out improsedente
		var temp2 = await Http.GetFromJsonAsync<CandidatoGeneral[]>("sample-data/presidentialList1.json");
		candidatosPoliticos = temp2.ToList().Where(x => !x.strEstadoExp.Equals("IMPROCEDENTE", StringComparison.InvariantCultureIgnoreCase)).ToList();

		var temp3 = await Http.GetFromJsonAsync<HojaDeVida[]>("sample-data/presidentialList2.json");
		hojasDeVida = temp3.ToList();

		LoadResults();

		Question question = new Question
		{
			Title = "Distribución por genero",
			Description = "Presidencia, 1a vicepresidencia y 2a vicepresidencia. Todos los partidos tienen al menos 1 de cada genero en la lista.",
			Options = new List<string> { "Mayoría femenina", "Mayoría masculina" },
			OnNext = filterByGender
		};
		questions.Add(question);

		Question question2 = new Question
		{
			Title = "Test 2",
			Description = "Text",
			Options = new List<string> { "Option" },
			OnNext = filterByGender
		};
		questions.Add(question2);

	}

	public void filterByGender(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Contains("femenina"))
		{
			failed = partidosPoliticos.Where(x => x.intCandHombres > x.intCandMujeres).ToList();
		}
		else if (option.Contains("masculina"))
		{
			failed = partidosPoliticos.Where(x => x.intCandMujeres > x.intCandHombres).ToList();
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void LoadResults()
	{
		foreach (var i in partidosPoliticos)
		{
			results.Add(new Result()
			{
				Id = i.idOrganizacionPolitica,
				ImageRoute = $"sample-data/Logo/{i.idOrganizacionPolitica}.png",
				Name = i.strOrganizacionPolitica
			});
		}
	}
}