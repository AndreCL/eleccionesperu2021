@page "/testpresidencial"
@inject HttpClient Http

<QuestionComponent Questions="questions"></QuestionComponent>

<ResultsComponent Results="@results"></ResultsComponent>

@code {
	private List<PartidoPolitico> partidosPoliticos;
	private List<CandidatoGeneral> candidatosPoliticos;
	private List<HojaDeVida> hojasDeVida;
	private List<Result> results = new List<Result> { };
	private List<Question> questions = new List<Question> { };


	protected override async Task OnInitializedAsync()
	{
		var temp = await Http.GetFromJsonAsync<PartidoPolitico[]>("sample-data/presidentialList0.json");

		//Filter out improsedente
		partidosPoliticos = temp.ToList().Where(x => !x.strEstadoLista.Equals("IMPROCEDENTE", StringComparison.InvariantCultureIgnoreCase)).ToList();

		//Filter out improsedente
		var temp2 = await Http.GetFromJsonAsync<CandidatoGeneral[]>("sample-data/presidentialList1.json");
		candidatosPoliticos = temp2.ToList().Where(x => !x.strEstadoExp.Equals("IMPROCEDENTE", StringComparison.InvariantCultureIgnoreCase)).ToList();

		var temp3 = await Http.GetFromJsonAsync<HojaDeVida[]>("sample-data/presidentialList2.json");
		hojasDeVida = temp3.ToList();

		LoadResults();

		Question question = new Question
		{
			Title = "Conformación por sexo",
			Description = "Todos los partidos tienen al menos 1 persona de cada genero en la lista para presidencia, " +
			"1a vicepresidencia y 2a vicepresidencia. ¿Cual es tu conformación preferida?",
			Options = new List<string> { "2 mujeres y 1 hombre", "2 hombres y 1 mujer" },
			OnNext = filterByGender
		};
		questions.Add(question);

		Question question2 = new Question
		{
			Title = "País de nacimiento",
			Description = "¿En qué país nacieron los candidatos a la presidencia, 1ra vicepresidencia y 2da vicepresidencia",
			Options = new List<string> { "Perú" },
			OnNext = filterByBirthplace
		};
		questions.Add(question2);
	}

	public void filterByBirthplace(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Contains("Perú"))
		{
			foreach(var i in partidosPoliticos)
			{
				var president = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 1);
				var vicepres1 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 2);
				var vicepres2 = candidatosPoliticos.FirstOrDefault(x => x.idSolicitudLista == i.idSolicitudLista && x.idCargoEleccion == 3);
				var preshoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == president?.idHojaVida).FirstOrDefault()?.DatosPersonales?.strPaisNacimiento;
				var vice1hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres1?.idHojaVida).FirstOrDefault()?.DatosPersonales?.strPaisNacimiento;
				var vice2hoja = hojasDeVida.Where(x => x.DatosPersonales.idHojaVida == vicepres2?.idHojaVida).FirstOrDefault()?.DatosPersonales?.strPaisNacimiento;

				if ((preshoja != null && !preshoja.Equals("PERÚ", StringComparison.InvariantCultureIgnoreCase)) ||
					(vice1hoja != null && !vice1hoja.Equals("PERÚ", StringComparison.InvariantCultureIgnoreCase)) ||
					(vice2hoja != null && !vice2hoja.Equals("PERÚ", StringComparison.InvariantCultureIgnoreCase)) 
					)
				{
					failed.Add(i);
				}
			}
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void filterByGender(string option)
	{
		List<PartidoPolitico> failed = new List<PartidoPolitico>();

		if (option.Contains("2 mujeres"))
		{
			failed = partidosPoliticos.Where(x => x.intCandHombres > x.intCandMujeres).ToList();
		}
		else if (option.Contains("2 hombres"))
		{
			failed = partidosPoliticos.Where(x => x.intCandMujeres > x.intCandHombres).ToList();
		}

		foreach (var i in partidosPoliticos)
		{
			if (failed.Count > 0 && failed.Exists(x => x.idOrganizacionPolitica == i.idOrganizacionPolitica))
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(false);
			}
			else
			{
				results.Where(x => x.Id == i.idOrganizacionPolitica).FirstOrDefault().AddCounter(true);
			}
		}

		StateHasChanged();
	}

	public void LoadResults()
	{
		foreach (var i in partidosPoliticos)
		{
			results.Add(new Result()
			{
				Id = i.idOrganizacionPolitica,
				ImageRoute = $"sample-data/Logo/{i.idOrganizacionPolitica}.png",
				Name = i.strOrganizacionPolitica
			});
		}
	}
}